{"ast":null,"code":"import url from \"url\";\nimport getCurrentScriptSource from \"./getCurrentScriptSource.js\";\nfunction parseURL(resourceQuery) {\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.substr(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    if (scriptSource) {\n      var scriptSourceURL;\n      try {\n        // The placeholder `baseURL` with `window.location.href`,\n        // is to allow parsing of path-relative or protocol-relative URLs,\n        // and will have no effect if `scriptSource` is a fully valid URL.\n        scriptSourceURL = new URL(scriptSource, self.location.href);\n      } catch (error) {// URL parsing failed, do nothing.\n        // We will still proceed to see if we can recover using `resourceQuery`\n      }\n      if (scriptSourceURL) {\n        options = scriptSourceURL;\n        options.fromCurrentScript = true;\n      }\n    } else {\n      options = url.parse(self.location.href, true, true);\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nexport default parseURL;","map":{"version":3,"names":["url","getCurrentScriptSource","parseURL","resourceQuery","options","searchParams","substr","split","i","length","pair","decodeURIComponent","scriptSource","scriptSourceURL","URL","self","location","href","error","fromCurrentScript","parse"],"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/galileo/galileo/node_modules/webpack-dev-server/client/utils/parseURL.js"],"sourcesContent":["import url from \"url\";\nimport getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n\nfunction parseURL(resourceQuery) {\n  var options = {};\n\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.substr(1).split(\"&\");\n\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n\n    if (scriptSource) {\n      var scriptSourceURL;\n\n      try {\n        // The placeholder `baseURL` with `window.location.href`,\n        // is to allow parsing of path-relative or protocol-relative URLs,\n        // and will have no effect if `scriptSource` is a fully valid URL.\n        scriptSourceURL = new URL(scriptSource, self.location.href);\n      } catch (error) {// URL parsing failed, do nothing.\n        // We will still proceed to see if we can recover using `resourceQuery`\n      }\n\n      if (scriptSourceURL) {\n        options = scriptSourceURL;\n        options.fromCurrentScript = true;\n      }\n    } else {\n      options = url.parse(self.location.href, true, true);\n      options.fromCurrentScript = true;\n    }\n  }\n\n  return options;\n}\n\nexport default parseURL;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,sBAAsB,MAAM,6BAA6B;AAEhE,SAASC,QAAQA,CAACC,aAAa,EAAE;EAC/B,IAAIC,OAAO,GAAG,CAAC,CAAC;EAEhB,IAAI,OAAOD,aAAa,KAAK,QAAQ,IAAIA,aAAa,KAAK,EAAE,EAAE;IAC7D,IAAIE,YAAY,GAAGF,aAAa,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAErD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,IAAIE,IAAI,GAAGL,YAAY,CAACG,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;MACrCH,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD;EACF,CAAC,MAAM;IACL;IACA,IAAIE,YAAY,GAAGX,sBAAsB,CAAC,CAAC;IAE3C,IAAIW,YAAY,EAAE;MAChB,IAAIC,eAAe;MAEnB,IAAI;QACF;QACA;QACA;QACAA,eAAe,GAAG,IAAIC,GAAG,CAACF,YAAY,EAAEG,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;MAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;QACf;MAAA;MAGF,IAAIL,eAAe,EAAE;QACnBT,OAAO,GAAGS,eAAe;QACzBT,OAAO,CAACe,iBAAiB,GAAG,IAAI;MAClC;IACF,CAAC,MAAM;MACLf,OAAO,GAAGJ,GAAG,CAACoB,KAAK,CAACL,IAAI,CAACC,QAAQ,CAACC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACnDb,OAAO,CAACe,iBAAiB,GAAG,IAAI;IAClC;EACF;EAEA,OAAOf,OAAO;AAChB;AAEA,eAAeF,QAAQ"},"metadata":{},"sourceType":"module"}